name: Deploy Lambda

on:
  push:
    branches:
      - main      # prod環境にデプロイ
      - develop   # dev環境にデプロイ
    paths:
      - 'backend/app/**'
      - 'lambda/**'
      - 'scripts/deploy-lambda.sh'
  workflow_dispatch:  # 手動実行も可能
    inputs:
      environment:
        description: 'Environment to deploy (dev/prod)'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod

# OIDCトークンの取得を許可
permissions:
  id-token: write   # OIDCトークン取得に必要
  contents: read    # リポジトリの読み取り

jobs:
  determine-environment:
    name: Determine Environment
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.env.outputs.environment }}
    steps:
      - name: Determine environment
        id: env
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            # 手動実行の場合は入力値を使用
            echo "environment=${{ github.event.inputs.environment }}" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref }}" = "refs/heads/main" ]; then
            # mainブランチはprod環境
            echo "environment=prod" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref }}" = "refs/heads/develop" ]; then
            # developブランチはdev環境
            echo "environment=dev" >> $GITHUB_OUTPUT
          else
            # その他のブランチはdev環境（フォールバック）
            echo "environment=dev" >> $GITHUB_OUTPUT
          fi

  deploy:
    name: Deploy to AWS Lambda (${{ needs.determine-environment.outputs.environment }})
    runs-on: ubuntu-latest
    needs: determine-environment
    environment: ${{ needs.determine-environment.outputs.environment }}  # 環境ごとのSecretsを使用

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          uv sync

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ap-northeast-1

      - name: Deploy Lambda function
        run: |
          chmod +x ./scripts/deploy-lambda.sh
          ./scripts/deploy-lambda.sh ${{ needs.determine-environment.outputs.environment }}

      - name: Deployment summary
        if: success()
        run: |
          echo "✅ Lambda deployment successful!"
          echo "Environment: ${{ needs.determine-environment.outputs.environment }}"
          echo "Function: jigsaw-puzzle-${{ needs.determine-environment.outputs.environment }}-puzzle-register"
          echo "Region: ap-northeast-1"

      - name: Notify on failure
        if: failure()
        run: |
          echo "❌ Lambda deployment failed!"
          echo "Environment: ${{ needs.determine-environment.outputs.environment }}"
          echo "Check the logs above for details"

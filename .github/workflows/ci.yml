name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies
        working-directory: backend
        run: |
          uv sync

      - name: Run mypy (Type Check)
        working-directory: backend
        run: |
          uv run mypy app

      - name: Run pytest (Unit Tests)
        working-directory: backend
        run: |
          uv run pytest tests/unit/ -v --cov=app --cov-report=xml

      - name: Run pytest (Integration Tests)
        working-directory: backend
        run: |
          uv run pytest tests/integration/ -v

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        if: success()
        with:
          file: ./backend/coverage.xml
          flags: backend
          name: backend-coverage

  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      - name: Run TypeScript type check
        working-directory: frontend
        run: npx tsc --noEmit

      - name: Run Vitest (Unit Tests)
        working-directory: frontend
        run: npm test -- --run

      - name: Run ESLint
        working-directory: frontend
        run: npm run lint || echo "⚠️  ESLint warnings detected (non-blocking)"
        continue-on-error: true

      - name: Build
        working-directory: frontend
        run: npm run build

  summary:
    name: CI Summary
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]
    if: always()

    steps:
      - name: Check results
        run: |
          if [ "${{ needs.backend-tests.result }}" = "success" ] && [ "${{ needs.frontend-tests.result }}" = "success" ]; then
            echo "✅ All tests passed!"
            exit 0
          else
            echo "❌ Some tests failed"
            echo "Backend: ${{ needs.backend-tests.result }}"
            echo "Frontend: ${{ needs.frontend-tests.result }}"
            exit 1
          fi
